build:local --@rules_erlang//:erlang_home=/nix/store/w0iz36rgx8riq84jxx7qahfydx37x0cf-erlang-25.0.3/lib/erlang
build:local --@rules_erlang//:erlang_version=25.0
build:local --//:elixir_home=/nix/store/jh1z2508skawj9is5psamr5g1nhk6r5r-elixir-1.13.4/lib/elixir

build --tool_java_language_version=17
build --tool_java_runtime_version=local_jdk

# rabbitmqctl wait shells out to 'ps', which is broken in the bazel macOS
# sandbox (https://github.com/bazelbuild/bazel/issues/7448)
# adding "--spawn_strategy=local" to the invocation is a workaround
build --spawn_strategy=local

# --experimental_strict_action_env breaks memory size detection on macOS,
# so turn it off for local runs
build --noexperimental_strict_action_env
build:buildbuddy --experimental_strict_action_env

# don't re-run flakes automatically on the local machine
build --flaky_test_attempts=1

# Always run locally. Remote builds seem to be broken because of /bin/bash replacements.
build --config=local

# build:buildbuddy --remote_header=x-buildbuddy-api-key=YOUR_API_KEY_HERE

# cross compile for linux (if on macOS) with rbe
# build:rbe --host_cpu=k8
# build:rbe --cpu=k8
